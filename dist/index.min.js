!function(e,n){if("object"==typeof exports&&"object"==typeof module)module.exports=n();else if("function"==typeof define&&define.amd)define([],n);else{var t=n();for(var o in t)("object"==typeof exports?exports:e)[o]=t[o]}}(window,function(){return function(e){var n={};function t(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(n){return e[n]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=3)}([function(e,n){const t="(${1:expre})",o="(${1:str})",r="(${1:x}, ${2:y})",i="(${1:n}, ${2:m})",E="(${1:s1}, ${2:s2})",s="(${1:time1}, ${2:time2})",T="(${1:s}, ${2:n})",A="(${1:s})",a="(${1:n})",l="(${1:d})",R="(${1:t})",N="(${1:x})",u="(${1:*})";e.exports={ABS:t,ACOS:N,ASIN:N,ATAN:N,ATAN2:i,AVG:t,CEIL:N,CEILING:N,COS:N,COT:N,COUNT:t,DEGREES:N,EXP:N,FLOOR:N,GREATEST:t,LEAST:t,LN:t,LOG:t,LOG10:N,LOG2:N,MAX:t,MIN:t,MOD:r,POWER:r,POW:r,RADIANS:N,ROUND:N,SIGN:N,SIN:N,SQRT:N,SUM:t,TAN:N,TRUNCATE:r,ASCII:t,COUNT:u,CHAR_LENGTH:o,CHARACTER_LENGTH:t,CONCAT:"(${1:s1}, ${2:s2...sn})",CONCAT_WS:"(${1:s1}, ${2:s2...sn})",FIRST:t,FIELD:t,FIND_IN_SET:E,FORMAT:"(${1:x}, ${2:n})",INSERT:"(${1:s1}, ${2:x}, ${3:len}, ${4:s2})",LOCATE:"(${1:s1}, ${2:s})",LCASE:A,LEFT:T,LOWER:A,LAST:t,LPAD:"(${1:s1}, ${2:len}, ${3:s2})",LTRIM:A,MID:"(${1:s}, ${2:n}, ${3:len})",POSITION:"(${1:s1} IN ${2:s})",REPEAT:T,REPLACE:"(${1:s}, ${2:s1}, ${3:s2})",REVERSE:A,RIGHT:T,RPAD:"(${1:s1}, ${2:len}, ${3:s2})",RTRIM:A,SPACE:a,STRCMP:T,SUBSTR:"(${1:s}, ${2:start}, ${3:length})",SUBSTRING:"(${1:s}, ${2:start}, ${3:length})",SUBSTRING_INDEX:"(${1:s}, ${2:delimiter}, ${3:number})",TRIM:A,UCASE:A,UPPER:A,STDEV:t,VARCHAR:t,VARCHAR2:t,ADDDATE:"(${1:d}, ${2:n})",ADDTIME:"(${1:t}, ${2:n})",DATEDIFF:"(${1:d1}, ${2:d2})",DATE_ADD:"(${1:d}, ${2:expre})",DATE_FORMAT:"(${1:d}, ${2:f})",DATE_SUB:"(${1:date}, ${2:INTERVAL 2 DAY})",DAY:l,DAYNAME:l,DAYOFMONTH:l,DAYOFWEEK:l,DAYOFYEAR:l,EXTRACT:"(${1:type} FROM ${2:d})",FROM_DAYS:a,HOUR:R,LAST_DAY:l,MAKEDATE:"(${1:year}, ${2:day-of-year})",MAKETIME:"(${1:hour}, ${2:minute}, 3:second)",MICROSECOND:l,MINUTE:R,MONTHNAME:l,MONTH:l,PERIOD_ADD:"(${1:period}, ${2:number})",PERIOD_DIFF:"(${1:period1}, ${2:period2})",QUARTER:l,SECOND:R,SEC_TO_TIME:A,STR_TO_DATE:"(${1:string}, ${2:format_mask})",SUBDATE:"(${1:d}, ${2:n})",SUBTIME:"(${1:t}, ${2:n})",TIME:t,TIME_FORMAT:"(${1:t}, ${2:f})",TIME_TO_SEC:R,TIMEDIFF:s,TIMESTAMP:"(${1:expre}, ${2:interval})",TO_DAYS:l,WEEK:l,WEEKDAY:l,WEEKOFYEAR:l,YEAR:l,YEARWEEK:"(${1:date}, ${2:mode})",BIN:N,BINARY:A,CAST:"(${1:x} AS ${2:type})",COALESCE:"(${1:expr1}, ${2:expr2, ...., expr_n})",CONV:"(${1:x}, ${2:f1}, ${3:f2})",CONVERT:"(${1:s}${2: USING cs})",IF:"(${1:expre}, ${2:val1}, ${3:val2})",IFNULL:"(${1:val1}, ${val2})",ISNULL:t,NULLIF:"(${1:expre1}, ${2:expre2})"}},function(e,n,t){"use strict";t.r(n),t.d(n,"conf",function(){return o}),t.d(n,"language",function(){return T});const o={wordPattern:/(-?\d*\.\d\w*)|([^`~!#%^&*()\-=+\[{\]}\\|;:'",.<>\/?\s]+)/g,comments:{lineComment:"#"},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"},{open:"<",close:">"}],folding:{}},r=["sum","min","max","avg","group","stddev","stdvar","count","count_values","bottomk","topk","quantile"],i=[];for(const e of r)i.push(e+"_over_time");const E=["on","ignoring","group_right","group_left","by","without"],s=`(${E.reduce((e,n)=>`${e}|${n}`)})`,T={ignoreCase:!0,defaultToken:"",tokenPostfix:".sql",keywords:["promql",...r.concat(i).concat(E).concat(["offset"])],operators:["+","-","*","/","%","^","==","!=",">","<",">=","<=","AND","OR","UNLESS"],builtinFunctions:["ABS","ABSENT","CEIL","CHANGES","CLAMP_MAX","CLAMP_MIN","DAY_OF_MONTH","DAY_OF_WEEK","DAYS_IN_MONTH","DELTA","DERIV","EXP","FLOOR","HISTOGRAM_QUANTILE","HOLT_WINTERS","HOUR","IDELTA","INCREASE","IRATE","LABEL_JOIN","LABEL_REPLACE","LN","LOG2","LOG10","MINUTE","MONTH","PREDICT_LINEAR","RATE","RESETS","ROUND","SCALAR","SORT","SORT_DESC","SQRT","TIME","TIMESTAMP","VECTOR","YEAR"],vectorMatching:s,symbols:/[=><!~?:&|+\-*\/^%]+/,escapes:/\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,digits:/\d+(_+\d+)*/,octaldigits:/[0-7]+(_+[0-7]+)*/,binarydigits:/[0-1]+(_+[0-1]+)*/,hexdigits:/[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,integersuffix:/(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/,floatsuffix:/[fFlL]?/,tokenizer:{root:[[/@vectorMatching\s*(?=\()/,"type","@clauses"],[/[a-z_]\w*(?=\s*(=|!=|=~|!~))/,"tag"],[/(^#.*$)/,"comment"],[/[a-zA-Z_]\w*/,{cases:{"@keywords":"keyword","@operators":"operator","@builtinFunctions":"predefined","@default":"identifier"}}],[/"([^"\\]|\\.)*$/,"string.invalid"],[/'([^'\\]|\\.)*$/,"string.invalid"],[/"/,"string","@string_double"],[/'/,"string","@string_single"],[/`/,"string","@string_backtick"],{include:"@whitespace"},[/[{}()\[\]]/,"@brackets"],[/[<>](?!@symbols)/,"@brackets"],[/@symbols/,{cases:{"@operators":"delimiter","@default":""}}],[/\d+[smhdwy]/,"number"],[/\d*\d+[eE]([\-+]?\d+)?(@floatsuffix)/,"number.float"],[/\d*\.\d+([eE][\-+]?\d+)?(@floatsuffix)/,"number.float"],[/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/,"number.hex"],[/0[0-7']*[0-7](@integersuffix)/,"number.octal"],[/0[bB][0-1']*[0-1](@integersuffix)/,"number.binary"],[/\d[\d']*\d(@integersuffix)/,"number"],[/\d(@integersuffix)/,"number"]],string_double:[[/[^\\"]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/"/,"string","@pop"]],string_single:[[/[^\\']+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/'/,"string","@pop"]],string_backtick:[[/[^\\`$]+/,"string"],[/@escapes/,"string.escape"],[/\\./,"string.escape.invalid"],[/`/,"string","@pop"]],clauses:[[/[^(,)]/,"tag"],[/\)/,"identifier","@pop"]],whitespace:[[/[ \t\r\n]+/,"white"]]}}},function(e,n,t){"use strict";t.r(n),t.d(n,"conf",function(){return o}),t.d(n,"language",function(){return r});const o={comments:{lineComment:"--",blockComment:["/*","*/"]},brackets:[["{","}"],["[","]"],["(",")"]],autoClosingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}],surroundingPairs:[{open:"{",close:"}"},{open:"[",close:"]"},{open:"(",close:")"},{open:'"',close:'"'},{open:"'",close:"'"}],folding:{}},r={ignoreCase:!0,defaultToken:"",tokenPostfix:".sql",brackets:[{open:"[",close:"]",token:"delimiter.square"},{open:"(",close:")",token:"delimiter.parenthesis"}],keywords:["oracle","ACCESS","ELSE","MODIFY","START","ADD","EXCLUSIVE","NOAUDIT","SELECT","ALL","EXISTS","NOCOMPRESS","SESSION","ALTER","FILE","NOT","SET","AND","FLOAT","NOTFOUND","SHARE","ANY","FOR","NOWAIT","SIZE","ARRAYLEN","FROM","NULL","SMALLINT","AS","GRANT","NUMBER","SQLBUF","ASC","GROUP","OF","SUCCESSFUL","AUDIT","HAVING","OFFLINE","SYNONYM","BETWEEN","IDENTIFIED","ON","SYSDATE","BY","IMMEDIATE","ONLINE","TABLE","CHAR","IN","OPTION","THEN","CHECK","INCREMENT","OR","TO","CLUSTER","INDEX","ORDER","TRIGGER","COLUMN","INITIAL","PCTFREE","UID","COMMENT","INSERT","PRIOR","UNION","COMPRESS","INTEGER","PRIVILEGES","UNIQUE","CONNECT","INTERSECT","PUBLIC","UPDATE","CREATE","INTO","RAW","USER","CURRENT","IS","RENAME","VALIDATE","DATE","LEVEL","RESOURCE","VALUES","DECIMAL","LIKE","REVOKE","VARCHAR","DEFAULT","LOCK","ROW","VARCHAR2","DELETE","LONG","ROWID","VIEW","DESC","MAXEXTENTS","ROWLABEL","WHENEVER","DISTINCT","MINUS","ROWNUM","WHERE","DROP","MODE","ROWS","WITH"],operators:["ALL","AND","ANY","BETWEEN","EXISTS","IN","LIKE","NOT","OR","SOME","EXCEPT","INTERSECT","UNION","APPLY","CROSS","FULL","INNER","JOIN","LEFT","OUTER","RIGHT","CONTAINS","FREETEXT","IS","NULL","PIVOT","UNPIVOT","MATCHED"],builtinFunctions:["ABS","ACOS","ADD_MONTHS","ASCII","ASCIISTR","ASIN","ATAN","ATAN2","AVG","BFILENAME","BIN_TO_NUM","BITAND","CARDINALITY","CASE","CAST","CEIL","CHARTOROWID","CHR","COALESCE","COMPOSE","CONCAT","CONVERT","CORR","COS","COSH","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","CURRENT_DATE","CURRENT_TIMESTAMP","DBTIMEZONE","DECODE","DECOMPOSE","DENSE_RANK","DUMP","EMPTY_BLOB","EMPTY_CLOB","EXP","EXTRACT","FIRST_VALUE","FLOOR","FROM_TZ","GREATEST","GROUP_ID","HEXTORAW","INITCAP","INSTR","INSTR2","INSTR4","INSTRB","INSTRC","LAG","LAST_DAY","LAST_VALUE","LEAD","LEAST","LENGTH","LENGTH2","LENGTH4","LENGTHB","LENGTHC","LISTAGG","LN","LNNVL","LOCALTIMESTAMP","LOG","LOWER","LPAD","LTRIM","MAX","MEDIAN","MIN","MOD","MONTHS_BETWEEN","NANVL","NCHR","NEW_TIME","NEXT_DAY","NTH_VALUE","NULLIF","NUMTODSINTERVAL","NUMTOYMINTERVAL","NVL","NVL2","POWER","RANK","RAWTOHEX","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REMAINDER","REPLACE","ROUND","ROWNUM","RPAD","RTRIM","SESSIONTIMEZONE","SIGN","SIN","SINH","SOUNDEX","SQRT","STDDEV","SUBSTR","SUM","SYS_CONTEXT","SYSDATE","SYSTIMESTAMP","TAN","TANH","TO_CHAR","TO_CLOB","TO_DATE","TO_DSINTERVAL","TO_LOB","TO_MULTI_BYTE","TO_NCLOB","TO_NUMBER","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_YMINTERVAL","TRANSLATE","TRIM","TRUNC","TZ_OFFSET","UID","UPPER","USER","USERENV","VAR_POP","VAR_SAMP","VARIANCE","VSIZE"],builtinVariables:["@@DATEFIRST","@@DBTS","@@LANGID","@@LANGUAGE","@@LOCK_TIMEOUT","@@MAX_CONNECTIONS","@@MAX_PRECISION","@@NESTLEVEL","@@OPTIONS","@@REMSERVER","@@SERVERNAME","@@SERVICENAME","@@SPID","@@TEXTSIZE","@@VERSION","@@CURSOR_ROWS","@@FETCH_STATUS","@@DATEFIRST","@@PROCID","@@ERROR","@@IDENTITY","@@ROWCOUNT","@@TRANCOUNT","@@CONNECTIONS","@@CPU_BUSY","@@IDLE","@@IO_BUSY","@@PACKET_ERRORS","@@PACK_RECEIVED","@@PACK_SENT","@@TIMETICKS","@@TOTAL_ERRORS","@@TOTAL_READ","@@TOTAL_WRITE"],pseudoColumns:["$ACTION","$IDENTITY","$ROWGUID","$PARTITION"],tokenizer:{root:[{include:"@comments"},{include:"@whitespace"},{include:"@pseudoColumns"},{include:"@numbers"},{include:"@strings"},{include:"@complexIdentifiers"},{include:"@scopes"},[/[;,.]/,"delimiter"],[/[()]/,"@brackets"],[/[\w@#$]+/,{cases:{"@keywords":"keyword","@operators":"operator","@builtinVariables":"predefined","@builtinFunctions":"predefined","@default":"identifier"}}],[/[<>=!%&+\-*/|~^]/,"operator"]],whitespace:[[/\s+/,"white"]],comments:[[/--+.*/,"comment"],[/\/\*/,{token:"comment.quote",next:"@comment"}]],comment:[[/[^*/]+/,"comment"],[/\*\//,{token:"comment.quote",next:"@pop"}],[/./,"comment"]],pseudoColumns:[[/[$][A-Za-z_][\w@#$]*/,{cases:{"@pseudoColumns":"predefined","@default":"identifier"}}]],numbers:[[/0[xX][0-9a-fA-F]*/,"number"],[/[$][+-]*\d*(\.\d*)?/,"number"],[/((\d+(\.\d*)?)|(\.\d+))([eE][\-+]?\d+)?/,"number"]],strings:[[/N'/,{token:"string",next:"@string"}],[/'/,{token:"string",next:"@string"}]],string:[[/[^']+/,"string"],[/''/,"string"],[/'/,{token:"string",next:"@pop"}]],complexIdentifiers:[[/\[/,{token:"identifier.quote",next:"@bracketedIdentifier"}],[/"/,{token:"identifier.quote",next:"@quotedIdentifier"}]],bracketedIdentifier:[[/[^\]]+/,"identifier"],[/]]/,"identifier"],[/]/,{token:"identifier.quote",next:"@pop"}]],quotedIdentifier:[[/[^"]+/,"identifier"],[/""/,"identifier"],[/"/,{token:"identifier.quote",next:"@pop"}]],scopes:[[/BEGIN\s+(DISTRIBUTED\s+)?TRAN(SACTION)?\b/i,"keyword"],[/BEGIN\s+TRY\b/i,{token:"keyword.try"}],[/END\s+TRY\b/i,{token:"keyword.try"}],[/BEGIN\s+CATCH\b/i,{token:"keyword.catch"}],[/END\s+CATCH\b/i,{token:"keyword.catch"}],[/(BEGIN|CASE)\b/i,{token:"keyword.block"}],[/END\b/i,{token:"keyword.block"}],[/WHEN\b/i,{token:"keyword.choice"}],[/THEN\b/i,{token:"keyword.choice"}]]}}},function(e,n,t){"use strict";t.r(n);var o={};t.r(o),t.d(o,"promLanguageDefinition",function(){return E}),t.d(o,"oracleLanguageDefinition",function(){return s}),t.d(o,"languages",function(){return T}),t.d(o,"_aliases",function(){return A}),t.d(o,"setAliases",function(){return a}),t.d(o,"getLanguage",function(){return l}),t.d(o,"getLanguageId",function(){return R}),t.d(o,"getLanguageConfig",function(){return N}),t.d(o,"about",function(){return u}),t.d(o,"init",function(){return I}),t.d(o,"register",function(){return O});var r=t(0),i=t.n(r);t(1);const E={id:"promql",extensions:[".promql"],aliases:["Prometheus","prometheus","prom","Prom","promql","Promql","promQL","PromQL"],mimetypes:[],loader:()=>Promise.resolve().then(t.bind(null,1))};t(2);const s={id:"oracle",extensions:[".oracle"],aliases:["ORACLE","Oracle","oracle","OracleSql"],mimetypes:[],loader:()=>Promise.resolve().then(t.bind(null,2))},T={promql:E,oracle:s};var A={go:["go","golang","GO","GOLANG"],redis:["redis","Redis","REDIS"]};const a=function(e,n){return A=n?Object.assign(A,e):e},l=function(e,n){let t=e.toLowerCase(),o=monaco.languages.getLanguages(),r=null;for(let i in o){let E=o[i];if(E.id==e||n&&E.id.toLowerCase()==t)return E;let s=null,T=(s=A[E.id]?E.aliases.concat(A[E.id]):[...E.aliases]).filter(o=>o==e||!!n&&o.toLowerCase()==t).length>0;if("redis"==E.id&&console.log("-",s,E.id,A,A[E.id]),T){r=E;break}}return r},R=function(e,n){let t=l(e,n);return t?t.id:null};async function N(e,n){let t=l(e,n);if(t){return await t.loader()}return null}const u=function(){console.log("monaco语言包，现支持：",Object.keys(T).join("、"))},I=function(e,n){O(e,n)},O=function(e,n){if(!monaco)return void console.error("[language-more] monaco is ",monaco," 请导入monaco");(!e||"Array"!=typeof e||e.length>0)&&console.warn("[language-more] register(arg0, arg1)请使用正确的参数列表：arguments(Array, Boolean)");let t={};if("all"==e[0])t=T;else for(let n in e){let o=e[n];for(let e in T){let n=T[e];n.aliases.indexOf(o)>-1&&(t[e]=n)}}console.log("result ",t);for(let e in t)c(t[e],n);return t};function c(e,n){let t=e.id;monaco.languages.register(e),monaco.languages.onLanguage(t,()=>{e.loader().then(e=>{if(monaco.languages.setMonarchTokensProvider(t,e.language),monaco.languages.setLanguageConfiguration(t,e.conf),n){let n=S(e.language.keywords,"Keyword"),o=S(e.language.operators,"Operator"),r=S(e.language.builtinFunctions,"Function"),i=[...n,...o,...r];monaco.languages.registerCompletionItemProvider(t,{provideCompletionItems:e=>({suggestions:i})})}})})}const S=(e,n)=>e.map(e=>({label:e,insertText:i.a[e]?`${e}${i.a[e]}`:e,kind:monaco.languages.CompletionItemKind[n],insertTextRules:monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet}));window&&(window.languages=o);n.default=o}])});